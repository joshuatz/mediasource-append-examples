(async () => {
	const vidClipBase64 = `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`;

	const videoElement = document.querySelector('video');

	// Create media source and attach
	const mediaSource = new MediaSource();
	videoElement.src = URL.createObjectURL(mediaSource);

	// Convert base64 to blob, then arraybuffer
	const vidBuff = await (await b64toBlob(vidClipBase64, 'video/webm')).arrayBuffer();

	// Add source buffer
	const sourceBuffer = await addSourceBufferWhenOpen(mediaSource, `video/webm; codecs="vp9,opus"`);

	// Append video, and close out when done
	sourceBuffer.onupdateend = () => {
		mediaSource.endOfStream();
		videoElement.play();
	};
	sourceBuffer.appendBuffer(vidBuff);

	// Debug Info
	console.log({
		sourceBuffer,
		mediaSource,
		videoElement
	});
})();
